(()=>{"use strict";class t{static async getForecast(t){try{const e=`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${t}/${new Date(Date.now()).toISOString().split("T")[0]}/${new Date(Date.now()+432e6).toISOString().split("T")[0]}?key=UK7QEAVD2N2BJANGP8Q3GGSFV&iconSet=icons1`,a=await fetch(e);if(!a.ok)throw new Error(`Http Error, status: ${a.status} message: ${a.message}`);return await a.json()}catch(t){return console.log("Weather API fetch error;",t),null}}}class e{#t;#e;#a;#s;constructor(t){this.setLocation(t)}setLocation(t){this.#t=t}getLocation(){return this.#t}async fetchForecast(){const e=await t.getForecast(this.getLocation());this.#e=e,this.unpackForecast(e)}unpackForecast(t){this.#a=this.unpackToday(t.currentConditions),this.#s=this.unpackFutureDays(t.days.slice(1))}unpackToday(t){return{day:this.formatDay(t.datetimeEpoch,"long"),date:this.formatDate(t.datetimeEpoch),time:t.datetime.slice(0,-3),temp:this.toCelsius(t.temp),icon:t.icon,precipitation:t.precipprob,humidity:Math.floor(t.humidity),windSpeed:Math.floor(t.windspeed)}}unpackFutureDays(t){return t.map((t=>({day:this.formatDay(t.datetimeEpoch,"short"),icon:t.icon,maxTemp:this.toCelsius(t.tempmax),minTemp:this.toCelsius(t.tempmin)})))}getForecastJSON(){return this.#e}getToday(){return this.#a}getDays(){return this.#s}toCelsius(t){return Math.floor(5*(t-32)/9)}formatDay(t,e){return new Date(1e3*t).toLocaleDateString("en-US",{weekday:e})}formatDate(t){return new Date(1e3*t).getDate()}}class a{static displayForecast(t){this.updateToday(t),this.updateDays(t)}static updateToday(t){const e={icon:document.getElementById("icon-today"),temp:document.getElementById("temp-today"),precip:document.getElementById("precip-val"),humid:document.getElementById("humid-val"),wind:document.getElementById("wind-val"),day:document.getElementById("day-today"),date:document.getElementById("date-today"),time:document.getElementById("time-today")},a=t.getToday();e.icon.className=a.icon,e.temp.innerText=a.temp,e.precip.innerText=a.precipitation+"%",e.humid.innerText=a.humidity+"%",e.wind.innerText=a.windSpeed+"kts",e.day.innerText=a.day,e.date.innerText=a.date,e.time.innerHTML=`${a.time}<span>hrs</span>`}static updateDays(t){const e=t.getDays();document.querySelectorAll("article.forecast-day").forEach(((t,a)=>{e[a]&&this.updateDay(t,e[a])}))}static updateDay(t,e){t.querySelector(".day").textContent=e.day,t.querySelector(".icon-day").textContent="",t.querySelector(".icon-day").classList.add(e.icon),t.querySelector(".max").innerHTML=`<span>↑</span>${e.maxTemp}<span>°</span>`,t.querySelector(".max").innerHTML=`<span>↓</span>${e.minTemp}<span>°</span>`}}document.addEventListener("DOMContentLoaded",(()=>{document.getElementById("area-form").addEventListener("submit",(async function(t){t.preventDefault();let s=t.target.querySelector("input").value;if(!s)return;t.target.reset();const n=new e(s);await n.fetchForecast(),n.getForecastJSON()?a.displayForecast(n):alert("Failed to fetch forecast data.")}))}))})();